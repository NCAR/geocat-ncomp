version: 2
# Tell CircleCI to use this workflow
#workflows:
#  version: 2
#  default:
#    jobs:
#      - build-libncomp
#      - python-3.6:
#          requires:
#            - build-libncomp
#      - python-3.7:
#          requires:
#            - build-libncomp
#      - python-3.8:
#          requires:
#            - build-libncomp

default-job: &default-job
  requires:
    - build-libncomp
  docker:
    - image: conda/miniconda3:latest
  steps:
    - checkout
    - restore_cache:
        key: deps-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_WORKFLOW_UPSTREAM_JOB_IDS }}
    - run:
        name: Build geocat-ncomp
        command: ./.circleci/install-circle.sh
    - run:
        name: Run tests
        command: ./.circleci/${TEST_SCRIPT}

jobs:
  build-libncomp:
    docker:
      - image: conda/miniconda3:latest
    environment:
      LIBNCOMP_ENV_NAME: "build-libncomp"
      LIBNCOMP_GIT_REPO: "https://github.com/NCAR/libncomp.git"
    steps:
      - checkout
      - run:
          name: Build libNComp
          command: ./.circleci/build-libncomp.sh
      - save_cache:
          key: deps-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_WORKFLOW_JOB_ID }}
          paths:
            - /usr/local/envs/build-libncomp
            - /usr/local/pkgs

  python-3.6:
    <<: *default-job
    environment:
      PYTHON: "3.6"
      ENV_NAME: "geocat-ncomp-dev"
      LIBNCOMP_ENV_NAME: "build-libncomp"
      TEST_SCRIPT: "run-checks.sh"

  python-3.7:
    <<: *default-job
    environment:
      PYTHON: "3.7"
      ENV_NAME: "geocat-ncomp-dev"
      LIBNCOMP_ENV_NAME: "build-libncomp"
      TEST_SCRIPT: "run-checks.sh"

  python-3.8:
    <<: *default-job
    environment:
      PYTHON: "3.8"
      ENV_NAME: "geocat-ncomp-dev"
      LIBNCOMP_ENV_NAME: "build-libncomp"
      TEST_SCRIPT: "run-checks.sh"
